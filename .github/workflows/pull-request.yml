name: Run Pull Request Checks

on:
  pull_request:
    branches: [main, production]

jobs:
  test:
    name: Test
    environment: ${{ github.event.pull_request.base.ref }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'

      - name: Yarn FontAwesome Setup
        env:
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}
        run: |
          yarn config set initScope npmScopes
          yarn config set npmScopes.fortawesome.npmRegistryServer "https://npm.fontawesome.com"
          yarn config set npmScopes.fortawesome.npmAlwaysAuth true
          yarn config set npmScopes.fortawesome.npmAuthToken $FONTAWESOME_NPM_AUTH_TOKEN

      - name: Install Yarn
        uses: ./.github/actions/yarn/install
        with:
          cwd: '.'
          enable-corepack: false
          cache-node-modules: true
          cache-install-state: true

      - name: Prettier Check
        shell: bash
        run: |
          yarn format:ci

      - name: ESLint Check
        shell: bash
        run: |
          yarn lint

  build:
    name: Build Preview
    environment: ${{ github.event.pull_request.base.ref }}
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'

      - name: Yarn FontAwesome Setup
        env:
          FONTAWESOME_NPM_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}
        run: |
          yarn config set initScope npmScopes
          yarn config set npmScopes.fortawesome.npmRegistryServer "https://npm.fontawesome.com"
          yarn config set npmScopes.fortawesome.npmAlwaysAuth true
          yarn config set npmScopes.fortawesome.npmAuthToken $FONTAWESOME_NPM_AUTH_TOKEN

      - name: Install Yarn
        uses: ./.github/actions/yarn/install
        with:
          cwd: '.'
          enable-corepack: false
          cache-node-modules: true
          cache-install-state: true
      - name: Create .env file for frontend
        uses: SpicyPizza/create-envfile@v2.0.2
        with:
          envkey_SANITY_STUDIO_PROJECT_ID: ${{ secrets.SANITY_STUDIO_PROJECT_ID }}
          envkey_SANITY_STUDIO_DATASET: ${{ secrets.SANITY_STUDIO_DATASET }}
          file_name: .env

      - name: Build
        shell: bash
        run: |
          yarn build

      - name: Tar Build
        shell: bash
        run: |
          tar -cvzf dist.tar.gz dist .env

      - name: Store Build
        uses: actions/upload-artifact@v3.1.3
        with:
          name: preview-build
          path: dist.tar.gz
          retention-days: 2

  preview:
    name: Deploy Preview
    environment: ${{ github.event.pull_request.base.ref }}
    runs-on: ubuntu-latest
    needs: [test, build]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate Preview URL
        id: preview-url
        uses: ./.github/actions/deploy/preview-path
        with:
          deploy-path: ${{ vars.DEPLOY_PATH }}

      - name: Restore Build from previous job
        uses: actions/download-artifact@v3.0.2
        with:
          name: preview-build
          path: dist.tar.gz

      - name: Untar Build
        shell: bash
        run: |
          cd dist.tar.gz
          tar -xvzf dist.tar.gz .
          rm -rf dist.tar.gz

      - name: Deploy build to Server
        id: deploy
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          passphrase: ${{ secrets.DEPLOY_SSH_PASSPHRASE }}
          port: ${{ secrets.DEPLOY_SSH_PORT }}
          source: 'dist/**,.env'
          deploy-path: ${{ steps.preview-url.outputs.deploy-path }}
          overwrite: true
